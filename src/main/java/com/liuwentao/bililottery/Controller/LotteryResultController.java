package com.liuwentao.bililottery.Controller;import com.liuwentao.bililottery.Entity.LotteryResult;import com.liuwentao.bililottery.Entity.LotteryResultWrapper;import com.liuwentao.bililottery.Entity.PostLottery;import com.liuwentao.bililottery.Service.IGlobalCache;import com.liuwentao.bililottery.Service.LotteryResultService;import com.liuwentao.bililottery.Service.PostLotteryService;import com.liuwentao.bililottery.util.ResultWrapper;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import java.util.List;/** * Created by liuwentao on 2021/9/18 19:00 */@Slf4j@Controller@ResponseBodypublic class LotteryResultController {    // getLotteryResult  OpenIdAndPatternId    @Autowired    PostLotteryService postLotteryService;    @Autowired    IGlobalCache iGlobalCache;    @Autowired    LotteryResultService lotteryResultService;    // 前端需要传patternId；同时没登录无法查询，所以必须在http请求头中放入授权的session；然后根据session去获得这个人的openId，然后通过openId和patternId查找该次抽奖的结果    @RequestMapping(value = "/api/getLotteryResult", method = RequestMethod.POST)    public ResultWrapper<LotteryResultWrapper> getLotteryResult(@RequestParam("session") String session, @RequestParam("id") String id) {        // 根据session去微信服务器端获取openId        if (!iGlobalCache.hasKey(session)) {            return ResultWrapper.<LotteryResultWrapper>builder().code(3).count(0).msg("session过期，请先登录").build();        }        String openId = iGlobalCache.get(session).toString();        // 通过openId，id获取这个人发起的这次抽奖的设置信息        log.info("----" + session + "   " + id);        PostLottery postLottery = postLotteryService.findPostLotteryByOpenIdAndId(openId, id);        postLottery.setOpenId("");        log.info("查找到的抽奖设置信息：" + postLottery);        List<LotteryResult> lotteryResultList= lotteryResultService.findLotteryResultByOpenIdAndPatternId(openId, id); // 中奖名单        log.info("中奖名单：" + lotteryResultList.toString());        return ResultWrapper.<LotteryResultWrapper>builder().code(0).count(1).data(LotteryResultWrapper.builder().postLottery(postLottery).lotteryResult(lotteryResultList).build()).msg(postLottery.getOut()).build();    }}